{
    "concert_singer": "CREATE TABLE stadium (\n    Stadium_ID NUMERIC PRIMARY KEY,\n    Location TEXT,\n    Name TEXT,\n    Capacity NUMERIC,\n    Highest NUMERIC,\n    Lowest NUMERIC,\n    Average NUMERIC\n);\n\nCREATE TABLE singer (\n    Singer_ID NUMERIC PRIMARY KEY,\n    Name TEXT,\n    Country TEXT,\n    Song_Name TEXT,\n    Song_release_year TEXT,\n    Age NUMERIC,\n    Is_male DATETIME\n);\n\nCREATE TABLE concert (\n    concert_ID NUMERIC PRIMARY KEY,\n    concert_Name TEXT,\n    Theme TEXT,\n    Stadium_ID TEXT,\n    Year TEXT,\n    FOREIGN KEY (Stadium_ID) REFERENCES stadium(Stadium_ID)\n);\n\nCREATE TABLE singer_in_concert (\n    concert_ID NUMERIC PRIMARY KEY,\n    Singer_ID TEXT,\n    FOREIGN KEY (Singer_ID) REFERENCES singer(Singer_ID),\n    FOREIGN KEY (concert_ID) REFERENCES concert(concert_ID)\n);",
    "pets_1": "CREATE TABLE Student (\n    StuID NUMERIC PRIMARY KEY,\n    LName TEXT,\n    Fname TEXT,\n    Age NUMERIC,\n    Sex TEXT,\n    Major NUMERIC,\n    Advisor NUMERIC,\n    city_code TEXT\n);\n\nCREATE TABLE Has_Pet (\n    StuID NUMERIC,\n    PetID NUMERIC,\n    FOREIGN KEY (StuID) REFERENCES Student(StuID),\n    FOREIGN KEY (PetID) REFERENCES Pets(PetID)\n);\n\nCREATE TABLE Pets (\n    PetID NUMERIC PRIMARY KEY,\n    PetType TEXT,\n    pet_age NUMERIC,\n    weight NUMERIC\n);",
    "car_1": "CREATE TABLE continents (\n    ContId NUMERIC PRIMARY KEY,\n    Continent TEXT\n);\n\nCREATE TABLE countries (\n    CountryId NUMERIC PRIMARY KEY,\n    CountryName TEXT,\n    Continent NUMERIC,\n    FOREIGN KEY (Continent) REFERENCES continents(ContId)\n);\n\nCREATE TABLE car_makers (\n    Id NUMERIC PRIMARY KEY,\n    Maker TEXT,\n    FullName TEXT,\n    Country TEXT,\n    FOREIGN KEY (Country) REFERENCES countries(CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId NUMERIC PRIMARY KEY,\n    Maker NUMERIC,\n    Model TEXT,\n    FOREIGN KEY (Maker) REFERENCES car_makers(Id)\n);\n\nCREATE TABLE car_names (\n    MakeId NUMERIC PRIMARY KEY,\n    Model TEXT,\n    Make TEXT,\n    FOREIGN KEY (Model) REFERENCES model_list(Model)\n);\n\nCREATE TABLE cars_data (\n    Id NUMERIC PRIMARY KEY,\n    MPG TEXT,\n    Cylinders NUMERIC,\n    Edispl NUMERIC,\n    Horsepower TEXT,\n    Weight NUMERIC,\n    Accelerate NUMERIC,\n    Year NUMERIC,\n    FOREIGN KEY (Id) REFERENCES car_names(MakeId)\n);",
    "flight_2": "CREATE TABLE airlines (\n    uid NUMERIC PRIMARY KEY,\n    Airline TEXT,\n    Abbreviation TEXT,\n    Country TEXT\n);\n\nCREATE TABLE airports (\n    City TEXT,\n    AirportCode TEXT PRIMARY KEY,\n    AirportName TEXT,\n    Country TEXT,\n    CountryAbbrev TEXT\n);\n\nCREATE TABLE flights (\n    Airline NUMERIC PRIMARY KEY,\n    FlightNo NUMERIC,\n    SourceAirport TEXT,\n    DestAirport TEXT,\n    FOREIGN KEY (DestAirport) REFERENCES airports(AirportCode),\n    FOREIGN KEY (SourceAirport) REFERENCES airports(AirportCode)\n);",
    "employee_hire_evaluation": "CREATE TABLE employee (\n    Employee_ID NUMERIC PRIMARY KEY,\n    Name TEXT,\n    Age NUMERIC,\n    City TEXT\n);\n\nCREATE TABLE shop (\n    Shop_ID NUMERIC PRIMARY KEY,\n    Name TEXT,\n    Location TEXT,\n    District TEXT,\n    Number_products NUMERIC,\n    Manager_name TEXT\n);\n\nCREATE TABLE hiring (\n    Shop_ID NUMERIC,\n    Employee_ID NUMERIC PRIMARY KEY,\n    Start_from TEXT,\n    Is_full_time DATETIME,\n    FOREIGN KEY (Employee_ID) REFERENCES employee(Employee_ID),\n    FOREIGN KEY (Shop_ID) REFERENCES shop(Shop_ID)\n);\n\nCREATE TABLE evaluation (\n    Employee_ID TEXT PRIMARY KEY,\n    Year_awarded TEXT,\n    Bonus NUMERIC,\n    FOREIGN KEY (Employee_ID) REFERENCES employee(Employee_ID)\n);",
    "cre_Doc_Template_Mgt": "CREATE TABLE Ref_Template_Types (\n    Template_Type_Code TEXT PRIMARY KEY,\n    Template_Type_Description TEXT\n);\n\nCREATE TABLE Templates (\n    Template_ID NUMERIC PRIMARY KEY,\n    Version_Number NUMERIC,\n    Template_Type_Code TEXT,\n    Date_Effective_From DATETIME,\n    Date_Effective_To DATETIME,\n    Template_Details TEXT,\n    FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types(Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID NUMERIC PRIMARY KEY,\n    Template_ID NUMERIC,\n    Document_Name TEXT,\n    Document_Description TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Template_ID) REFERENCES Templates(Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID NUMERIC PRIMARY KEY,\n    Document_ID NUMERIC,\n    Paragraph_Text TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Document_ID) REFERENCES Documents(Document_ID)\n);",
    "course_teach": "CREATE TABLE course (\n    Course_ID NUMERIC PRIMARY KEY,\n    Staring_Date TEXT,\n    Course TEXT\n);\n\nCREATE TABLE teacher (\n    Teacher_ID NUMERIC PRIMARY KEY,\n    Name TEXT,\n    Age TEXT,\n    Hometown TEXT\n);\n\nCREATE TABLE course_arrange (\n    Course_ID NUMERIC PRIMARY KEY,\n    Teacher_ID NUMERIC,\n    Grade NUMERIC,\n    FOREIGN KEY (Teacher_ID) REFERENCES teacher(Teacher_ID),\n    FOREIGN KEY (Course_ID) REFERENCES course(Course_ID)\n);",
    "museum_visit": "CREATE TABLE museum (\n    Museum_ID NUMERIC PRIMARY KEY,\n    Name TEXT,\n    Num_of_Staff NUMERIC,\n    Open_Year TEXT\n);\n\nCREATE TABLE visitor (\n    ID NUMERIC PRIMARY KEY,\n    Name TEXT,\n    Level_of_membership NUMERIC,\n    Age NUMERIC\n);\n\nCREATE TABLE visit (\n    Museum_ID NUMERIC PRIMARY KEY,\n    visitor_ID TEXT,\n    Num_of_Ticket NUMERIC,\n    Total_spent NUMERIC,\n    FOREIGN KEY (visitor_ID) REFERENCES visitor(ID),\n    FOREIGN KEY (Museum_ID) REFERENCES museum(Museum_ID)\n);",
    "wta_1": "CREATE TABLE players (\n    player_id NUMERIC PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    hand TEXT,\n    birth_date DATETIME,\n    country_code TEXT\n);\n\nCREATE TABLE matches (\n    best_of NUMERIC,\n    draw_size NUMERIC,\n    loser_age NUMERIC,\n    loser_entry TEXT,\n    loser_hand TEXT,\n    loser_ht NUMERIC,\n    loser_id NUMERIC,\n    loser_ioc TEXT,\n    loser_name TEXT,\n    loser_rank NUMERIC,\n    loser_rank_points NUMERIC,\n    loser_seed NUMERIC,\n    match_num NUMERIC,\n    minutes NUMERIC,\n    round TEXT,\n    score TEXT,\n    surface TEXT,\n    tourney_date DATETIME,\n    tourney_id TEXT,\n    tourney_level TEXT,\n    tourney_name TEXT,\n    winner_age NUMERIC,\n    winner_entry TEXT,\n    winner_hand TEXT,\n    winner_ht NUMERIC,\n    winner_id NUMERIC,\n    winner_ioc TEXT,\n    winner_name TEXT,\n    winner_rank NUMERIC,\n    winner_rank_points NUMERIC,\n    winner_seed NUMERIC,\n    year NUMERIC,\n    FOREIGN KEY (winner_id) REFERENCES players(player_id),\n    FOREIGN KEY (loser_id) REFERENCES players(player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date DATETIME,\n    ranking NUMERIC,\n    player_id NUMERIC,\n    ranking_points NUMERIC,\n    tours NUMERIC,\n    FOREIGN KEY (player_id) REFERENCES players(player_id)\n);",
    "battle_death": "CREATE TABLE battle (\n    id NUMERIC PRIMARY KEY,\n    name TEXT,\n    date TEXT,\n    bulgarian_commander TEXT,\n    latin_commander TEXT,\n    result TEXT\n);\n\nCREATE TABLE ship (\n    lost_in_battle NUMERIC,\n    id NUMERIC PRIMARY KEY,\n    name TEXT,\n    tonnage TEXT,\n    ship_type TEXT,\n    location TEXT,\n    disposition_of_ship TEXT,\n    FOREIGN KEY (lost_in_battle) REFERENCES battle(id)\n);\n\nCREATE TABLE death (\n    caused_by_ship_id NUMERIC,\n    id NUMERIC PRIMARY KEY,\n    note TEXT,\n    killed NUMERIC,\n    injured NUMERIC,\n    FOREIGN KEY (caused_by_ship_id) REFERENCES ship(id)\n);",
    "student_transcripts_tracking": "CREATE TABLE Addresses (\n    address_id NUMERIC PRIMARY KEY,\n    line_1 TEXT,\n    line_2 TEXT,\n    line_3 TEXT,\n    city TEXT,\n    zip_postcode TEXT,\n    state_province_county TEXT,\n    country TEXT,\n    other_address_details TEXT\n);\n\nCREATE TABLE Courses (\n    course_id NUMERIC PRIMARY KEY,\n    course_name TEXT,\n    course_description TEXT,\n    other_details TEXT\n);\n\nCREATE TABLE Departments (\n    department_id NUMERIC PRIMARY KEY,\n    department_name TEXT,\n    department_description TEXT,\n    other_details TEXT\n);\n\nCREATE TABLE Degree_Programs (\n    degree_program_id NUMERIC PRIMARY KEY,\n    department_id NUMERIC,\n    degree_summary_name TEXT,\n    degree_summary_description TEXT,\n    other_details TEXT,\n    FOREIGN KEY (department_id) REFERENCES Departments(department_id)\n);\n\nCREATE TABLE Sections (\n    section_id NUMERIC PRIMARY KEY,\n    course_id NUMERIC,\n    section_name TEXT,\n    section_description TEXT,\n    other_details TEXT,\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\nCREATE TABLE Semesters (\n    semester_id NUMERIC PRIMARY KEY,\n    semester_name TEXT,\n    semester_description TEXT,\n    other_details TEXT\n);\n\nCREATE TABLE Students (\n    student_id NUMERIC PRIMARY KEY,\n    current_address_id NUMERIC,\n    permanent_address_id NUMERIC,\n    first_name TEXT,\n    middle_name TEXT,\n    last_name TEXT,\n    cell_mobile_number TEXT,\n    email_address TEXT,\n    ssn TEXT,\n    date_first_registered DATETIME,\n    date_left DATETIME,\n    other_student_details TEXT,\n    FOREIGN KEY (permanent_address_id) REFERENCES Addresses(address_id),\n    FOREIGN KEY (current_address_id) REFERENCES Addresses(address_id)\n);\n\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id NUMERIC PRIMARY KEY,\n    degree_program_id NUMERIC,\n    semester_id NUMERIC,\n    student_id NUMERIC,\n    other_details TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (semester_id) REFERENCES Semesters(semester_id),\n    FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs(degree_program_id)\n);\n\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id NUMERIC PRIMARY KEY,\n    course_id NUMERIC,\n    student_enrolment_id NUMERIC,\n    FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment(student_enrolment_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\nCREATE TABLE Transcripts (\n    transcript_id NUMERIC PRIMARY KEY,\n    transcript_date DATETIME,\n    other_details TEXT\n);\n\nCREATE TABLE Transcript_Contents (\n    student_course_id NUMERIC,\n    transcript_id NUMERIC,\n    FOREIGN KEY (transcript_id) REFERENCES Transcripts(transcript_id),\n    FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses(student_course_id)\n);",
    "tvshow": "CREATE TABLE TV_Channel (\n    id TEXT PRIMARY KEY,\n    series_name TEXT,\n    Country TEXT,\n    Language TEXT,\n    Content TEXT,\n    Pixel_aspect_ratio_PAR TEXT,\n    Hight_definition_TV TEXT,\n    Pay_per_view_PPV TEXT,\n    Package_Option TEXT\n);\n\nCREATE TABLE TV_series (\n    id NUMERIC PRIMARY KEY,\n    Episode TEXT,\n    Air_Date TEXT,\n    Rating TEXT,\n    Share NUMERIC,\n    18_49_Rating_Share TEXT,\n    Viewers_m TEXT,\n    Weekly_Rank NUMERIC,\n    Channel TEXT,\n    FOREIGN KEY (Channel) REFERENCES TV_Channel(id)\n);\n\nCREATE TABLE Cartoon (\n    id NUMERIC PRIMARY KEY,\n    Title TEXT,\n    Directed_by TEXT,\n    Written_by TEXT,\n    Original_air_date TEXT,\n    Production_code NUMERIC,\n    Channel TEXT,\n    FOREIGN KEY (Channel) REFERENCES TV_Channel(id)\n);",
    "poker_player": "CREATE TABLE poker_player (\n    Poker_Player_ID NUMERIC PRIMARY KEY,\n    People_ID NUMERIC,\n    Final_Table_Made NUMERIC,\n    Best_Finish NUMERIC,\n    Money_Rank NUMERIC,\n    Earnings NUMERIC,\n    FOREIGN KEY (People_ID) REFERENCES people(People_ID)\n);\n\nCREATE TABLE people (\n    People_ID NUMERIC PRIMARY KEY,\n    Nationality TEXT,\n    Name TEXT,\n    Birth_Date TEXT,\n    Height NUMERIC\n);",
    "voter_1": "CREATE TABLE AREA_CODE_STATE (\n    area_code NUMERIC PRIMARY KEY,\n    state TEXT\n);\n\nCREATE TABLE CONTESTANTS (\n    contestant_number NUMERIC PRIMARY KEY,\n    contestant_name TEXT\n);\n\nCREATE TABLE VOTES (\n    vote_id NUMERIC PRIMARY KEY,\n    phone_number NUMERIC,\n    state TEXT,\n    contestant_number NUMERIC,\n    created DATETIME,\n    FOREIGN KEY (contestant_number) REFERENCES CONTESTANTS(contestant_number),\n    FOREIGN KEY (state) REFERENCES AREA_CODE_STATE(state)\n);",
    "world_1": "CREATE TABLE city (\n    ID NUMERIC PRIMARY KEY,\n    Name TEXT,\n    CountryCode TEXT,\n    District TEXT,\n    Population NUMERIC,\n    FOREIGN KEY (CountryCode) REFERENCES country(Code)\n);\n\nCREATE TABLE sqlite_sequence (\n    name TEXT,\n    seq TEXT\n);\n\nCREATE TABLE country (\n    Code TEXT PRIMARY KEY,\n    Name TEXT,\n    Continent TEXT,\n    Region TEXT,\n    SurfaceArea NUMERIC,\n    IndepYear NUMERIC,\n    Population NUMERIC,\n    LifeExpectancy NUMERIC,\n    GNP NUMERIC,\n    GNPOld NUMERIC,\n    LocalName TEXT,\n    GovernmentForm TEXT,\n    HeadOfState TEXT,\n    Capital NUMERIC,\n    Code2 TEXT\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode TEXT PRIMARY KEY,\n    Language TEXT,\n    IsOfficial TEXT,\n    Percentage NUMERIC,\n    FOREIGN KEY (CountryCode) REFERENCES country(Code)\n);",
    "orchestra": "CREATE TABLE conductor (\n    Conductor_ID NUMERIC PRIMARY KEY,\n    Name TEXT,\n    Age NUMERIC,\n    Nationality TEXT,\n    Year_of_Work NUMERIC\n);\n\nCREATE TABLE orchestra (\n    Orchestra_ID NUMERIC PRIMARY KEY,\n    Orchestra TEXT,\n    Conductor_ID NUMERIC,\n    Record_Company TEXT,\n    Year_of_Founded NUMERIC,\n    Major_Record_Format TEXT,\n    FOREIGN KEY (Conductor_ID) REFERENCES conductor(Conductor_ID)\n);\n\nCREATE TABLE performance (\n    Performance_ID NUMERIC PRIMARY KEY,\n    Orchestra_ID NUMERIC,\n    Type TEXT,\n    Date TEXT,\n    Official_ratings_(millions) NUMERIC,\n    Weekly_rank TEXT,\n    Share TEXT,\n    FOREIGN KEY (Orchestra_ID) REFERENCES orchestra(Orchestra_ID)\n);\n\nCREATE TABLE show (\n    Show_ID NUMERIC,\n    Performance_ID NUMERIC,\n    If_first_show DATETIME,\n    Result TEXT,\n    Attendance NUMERIC,\n    FOREIGN KEY (Performance_ID) REFERENCES performance(Performance_ID)\n);",
    "network_1": "CREATE TABLE Highschooler (\n    ID NUMERIC PRIMARY KEY,\n    name TEXT,\n    grade NUMERIC\n);\n\nCREATE TABLE Friend (\n    student_id NUMERIC PRIMARY KEY,\n    friend_id NUMERIC,\n    FOREIGN KEY (friend_id) REFERENCES Highschooler(ID),\n    FOREIGN KEY (student_id) REFERENCES Highschooler(ID)\n);\n\nCREATE TABLE Likes (\n    student_id NUMERIC PRIMARY KEY,\n    liked_id NUMERIC,\n    FOREIGN KEY (student_id) REFERENCES Highschooler(ID),\n    FOREIGN KEY (liked_id) REFERENCES Highschooler(ID)\n);",
    "dog_kennels": "CREATE TABLE Breeds (\n    breed_code TEXT PRIMARY KEY,\n    breed_name TEXT\n);\n\nCREATE TABLE Charges (\n    charge_id NUMERIC PRIMARY KEY,\n    charge_type TEXT,\n    charge_amount NUMERIC\n);\n\nCREATE TABLE Sizes (\n    size_code TEXT PRIMARY KEY,\n    size_description TEXT\n);\n\nCREATE TABLE Treatment_Types (\n    treatment_type_code TEXT PRIMARY KEY,\n    treatment_type_description TEXT\n);\n\nCREATE TABLE Owners (\n    owner_id NUMERIC PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    street TEXT,\n    city TEXT,\n    state TEXT,\n    zip_code TEXT,\n    email_address TEXT,\n    home_phone TEXT,\n    cell_number TEXT\n);\n\nCREATE TABLE Dogs (\n    dog_id NUMERIC PRIMARY KEY,\n    owner_id NUMERIC,\n    abandoned_yn TEXT,\n    breed_code TEXT,\n    size_code TEXT,\n    name TEXT,\n    age TEXT,\n    date_of_birth DATETIME,\n    gender TEXT,\n    weight TEXT,\n    date_arrived DATETIME,\n    date_adopted DATETIME,\n    date_departed DATETIME,\n    FOREIGN KEY (owner_id) REFERENCES Owners(owner_id),\n    FOREIGN KEY (owner_id) REFERENCES Owners(owner_id),\n    FOREIGN KEY (size_code) REFERENCES Sizes(size_code),\n    FOREIGN KEY (breed_code) REFERENCES Breeds(breed_code)\n);\n\nCREATE TABLE Professionals (\n    professional_id NUMERIC PRIMARY KEY,\n    role_code TEXT,\n    first_name TEXT,\n    street TEXT,\n    city TEXT,\n    state TEXT,\n    zip_code TEXT,\n    last_name TEXT,\n    email_address TEXT,\n    home_phone TEXT,\n    cell_number TEXT\n);\n\nCREATE TABLE Treatments (\n    treatment_id NUMERIC PRIMARY KEY,\n    dog_id NUMERIC,\n    professional_id NUMERIC,\n    treatment_type_code TEXT,\n    date_of_treatment DATETIME,\n    cost_of_treatment NUMERIC,\n    FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id),\n    FOREIGN KEY (professional_id) REFERENCES Professionals(professional_id),\n    FOREIGN KEY (treatment_type_code) REFERENCES Treatment_Types(treatment_type_code)\n);",
    "singer": "CREATE TABLE singer (\n    Singer_ID NUMERIC PRIMARY KEY,\n    Name TEXT,\n    Birth_Year NUMERIC,\n    Net_Worth_Millions NUMERIC,\n    Citizenship TEXT\n);\n\nCREATE TABLE song (\n    Song_ID NUMERIC PRIMARY KEY,\n    Title TEXT,\n    Singer_ID NUMERIC,\n    Sales NUMERIC,\n    Highest_Position NUMERIC,\n    FOREIGN KEY (Singer_ID) REFERENCES singer(Singer_ID)\n);",
    "real_estate_properties": "CREATE TABLE Ref_Feature_Types (\n    feature_type_code TEXT PRIMARY KEY,\n    feature_type_name TEXT\n);\n\nCREATE TABLE Ref_Property_Types (\n    property_type_code TEXT PRIMARY KEY,\n    property_type_description TEXT\n);\n\nCREATE TABLE Other_Available_Features (\n    feature_id NUMERIC PRIMARY KEY,\n    feature_type_code TEXT,\n    feature_name TEXT,\n    feature_description TEXT,\n    FOREIGN KEY (feature_type_code) REFERENCES Ref_Feature_Types(feature_type_code)\n);\n\nCREATE TABLE Properties (\n    property_id NUMERIC PRIMARY KEY,\n    property_type_code TEXT,\n    date_on_market DATETIME,\n    date_sold DATETIME,\n    property_name TEXT,\n    property_address TEXT,\n    room_count NUMERIC,\n    vendor_requested_price NUMERIC,\n    buyer_offered_price NUMERIC,\n    agreed_selling_price NUMERIC,\n    apt_feature_1 TEXT,\n    apt_feature_2 TEXT,\n    apt_feature_3 TEXT,\n    fld_feature_1 TEXT,\n    fld_feature_2 TEXT,\n    fld_feature_3 TEXT,\n    hse_feature_1 TEXT,\n    hse_feature_2 TEXT,\n    hse_feature_3 TEXT,\n    oth_feature_1 TEXT,\n    oth_feature_2 TEXT,\n    oth_feature_3 TEXT,\n    shp_feature_1 TEXT,\n    shp_feature_2 TEXT,\n    shp_feature_3 TEXT,\n    other_property_details TEXT,\n    FOREIGN KEY (property_type_code) REFERENCES Ref_Property_Types(property_type_code)\n);\n\nCREATE TABLE Other_Property_Features (\n    property_id NUMERIC,\n    feature_id NUMERIC,\n    property_feature_description TEXT,\n    FOREIGN KEY (property_id) REFERENCES Properties(property_id),\n    FOREIGN KEY (feature_id) REFERENCES Other_Available_Features(feature_id)\n);"
}